import{_ as o,c as l,o as r,b0 as e,j as a}from"./chunks/framework.C5ev1SXp.js";const s="/scm-docs/assets/image-20250921144142912.BDNtqun8.png",n="/scm-docs/assets/image-20250921144216417.BH9Qdkyb.png",i="/scm-docs/assets/image-20250921144309081.B7nNORu6.png",m="/scm-docs/assets/image-20250921144959307._wa6sDCu.png",x=JSON.parse('{"title":"LV001-串口通信简介","description":null,"frontmatter":{"title":"LV001-串口通信简介","date":"2025-09-21T14:40:27.000Z","icon":"famicons:logo-markdown","permalink":"/sdoc/peripheral/uart/126b08f60edb3b6ac7962cbf","index":true,"tags":null,"categories":null,"copyright":false,"keywords":null,"cover":null,"comments":null,"mathjax":null,"top":null,"description":null,"tdoc":{"detailDate":"2025-09-21T14:40:27.950Z","fulluuid":"ac7962cbf7d245659539f5436bb59e37","useduuid":"ac7962cbf"}},"headers":[],"relativePath":"sdoc/peripheral/uart/126b08f60edb3b6ac7962cbf.md","filePath":"sdoc/20-基本外设篇/10-UART/LV001-串口通信简介.md","lastUpdated":1758153691000}'),d={name:"sdoc/peripheral/uart/126b08f60edb3b6ac7962cbf.md"},p={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},T={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"24.442ex",height:"2.161ex",role:"img",focusable:"false",viewBox:"0 -750 10803.6 955","aria-hidden":"true"};function Q(c,t,h,f,u,g){return r(),l("div",null,[t[2]||(t[2]=e('<h1 id="lv001-串口通信简介" tabindex="-1">LV001-串口通信简介 <a class="header-anchor" href="#lv001-串口通信简介" aria-label="Permalink to &quot;LV001-串口通信简介&quot;">​</a></h1><h2 id="一、数据通信" tabindex="-1">一、数据通信 <a class="header-anchor" href="#一、数据通信" aria-label="Permalink to &quot;一、数据通信&quot;">​</a></h2><p>在单片机的应用中，数据通信是必不可少的一部分，比如：单片机和上位机、单片机和外围器件之间，它们都有数据通信的需求。由于设备之间的电气特性、传输速率、可靠性要求各不相同，于是就有了各种通信类型、通信协议，我们最常的有： USART、 IIC、 SPI、 CAN、 USB等。</p><h3 id="_1-数据通信方式" tabindex="-1">1. 数据通信方式 <a class="header-anchor" href="#_1-数据通信方式" aria-label="Permalink to &quot;1. 数据通信方式&quot;">​</a></h3><p>按数据通信方式分类，可分为串行通信和并行通信两种。串行和并行的对比如下图所示：</p><p><img src="'+s+'" alt="image-20250921144142912"></p><p>串行通信的基本特征是数据逐位顺序依次传输，优点是传输线少、 布线成本低、 灵活度高等优点，一般用于近距离人机交互， 特殊处理后也可以用于远距离， 缺点就是传输速率低。而并行通信是数据各位可以通过多条线同时传输，优点是传输速率高，缺点就是布线成本高，抗干扰能力差因而适用于短距离、高速率的通信。</p><h3 id="_2-数据传输方向" tabindex="-1">2. 数据传输方向 <a class="header-anchor" href="#_2-数据传输方向" aria-label="Permalink to &quot;2. 数据传输方向&quot;">​</a></h3><p>根据数据传输方向，通信又可分为全双工、半双工和单工通信。全双工、半双工和单工通信的比较如下图所示：</p><p><img src="'+n+'" alt="image-20250921144216417"></p><ul><li><p>单工是指数据传输仅能沿一个方向，不能实现反方向传输，如校园广播。</p></li><li><p>半双工是指数据传输可以沿着两个方向，但是需要分时进行， 如对讲机。</p></li><li><p>全双工是指数据可以同时进行双向传输，日常的打电话属于这种情形。</p></li></ul><p>这里注意全双工和半双工通信的区别：半双工通信是共用一条线路实现双向通信，而全双工是利用两条线路，一条用于发送数据，另一条用于接收数据。</p><h3 id="_3-数据同步方式" tabindex="-1">3. 数据同步方式 <a class="header-anchor" href="#_3-数据同步方式" aria-label="Permalink to &quot;3. 数据同步方式&quot;">​</a></h3><p>根据数据同步方式，通信又可分为同步通信和异步通信。同步通信和异步通信比较如下图所示：</p><p><img src="'+i+'" alt="image-20250921144309081"></p><p>同步通信要求通信双方共用同一时钟信号，在总线上保持统一的时序和周期完成信息传输。优点：可以实现高速率、大容量的数据传输，以及点对多点传输。缺点： 要求发送时钟和接收时钟保持严格同步， 收发双方时钟允许的误差较小， 同时硬件复杂。</p><p>异步通信不需要时钟信号，而是在数据信号中加入开始位和停止位等一些同步信号，以便使接收端能够正确地将每一个字符接收下来，某些通信中还需要双方约定传输速率。 优点：没有时钟信号硬件简单，双方时钟可允许一定误差。缺点： 通信速率较低，只适用点对点传输。</p><h3 id="_4-通信速率" tabindex="-1">4. 通信速率 <a class="header-anchor" href="#_4-通信速率" aria-label="Permalink to &quot;4. 通信速率&quot;">​</a></h3><p>在数字通信系统中，通信速率（传输速率）指数据在信道中传输的速度，它分为两种：传信率和传码率。</p><p>传信率：每秒钟传输的信息量，即每秒钟传输的二进制位数，单位为 bit/s（即比特每秒），因而又称为比特率。</p><p>传码率：每秒钟传输的码元个数，单位为 Baud（即波特每秒），因而又称为波特率。</p><p>比特率和波特率这两个概念又常常被人们混淆。 比特率很好理解，我们来看看波特率，波特率被传输的是码元，码元是信号被调制后的概念， 每个码元都可以表示一定 bit 的数据信息量。举个例子，在 TTL 电平标准的通信中，用 0V 表示逻辑 0， 5V 表示逻辑 1，这时候这个码元就可以表示两种状态。如果电平信号 0V、 2V、 4V 和 6V 分别表示二进制数 00、 01、 10、 11，这时候每一个码元就可以表示四种状态。</p><p>由上述可以看出，码元携带一定的比特信息，所以比特率和波特率也是有一定的关系的。比特率和波特率的关系可以用以下式子表示：</p>',23)),a("mjx-container",p,[(r(),l("svg",T,[...t[0]||(t[0]=[e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">比</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">特</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">率</text></g><g data-mml-node="mo" transform="translate(3277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">波</text></g><g data-mml-node="mi" transform="translate(5333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">特</text></g><g data-mml-node="mi" transform="translate(6333.6,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">率</text></g><g data-mml-node="mo" transform="translate(7555.8,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(8056,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(8354,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(8839,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(510,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(9752.6,0)"><g data-mml-node="mi"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z" style="stroke-width:3;"></path></g></g></g></g>',1)])])),t[1]||(t[1]=a("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("mi",{mathvariant:"normal"},"比"),a("mi",{mathvariant:"normal"},"特"),a("mi",{mathvariant:"normal"},"率"),a("mo",null,"="),a("mi",{mathvariant:"normal"},"波"),a("mi",{mathvariant:"normal"},"特"),a("mi",{mathvariant:"normal"},"率"),a("mo",null,"·"),a("mi",null,"l"),a("mi",null,"o"),a("msub",null,[a("mi",null,"g"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mn",null,"2")])]),a("mrow",{"data-mjx-texclass":"ORD"},[a("mi",null,"M")])])],-1))]),t[3]||(t[3]=e('<p>其中 M 表示码元承载的信息量。 我们也可以理解 M 为码元的进制数。举个例子：波特率为 100 Baud，即每秒传输 100 个码元，如果码元采用十六进制编码（即M=2，代入上述式子），那么这时候的比特率就是 400 bit/s。如果码元采用二进制编码（即 M=2， 代入上述式子），那么这时候的比特率就是 100 bit/s。</p><p>可以看出采用二进制的时候， 波特率和比特率数值上相等。 但是这里要注意，它们的相等只是数值相等， 其意义上不同，看波特率和波特率单位就知道。由于我们的所用的数字系统都是二进制的，所以有部分人久而久之就直接把波特率和比特率混淆了。</p><h2 id="二、串口通信协议" tabindex="-1">二、串口通信协议 <a class="header-anchor" href="#二、串口通信协议" aria-label="Permalink to &quot;二、串口通信协议&quot;">​</a></h2><h3 id="_1-简介" tabindex="-1">1. 简介 <a class="header-anchor" href="#_1-简介" aria-label="Permalink to &quot;1. 简介&quot;">​</a></h3><p>串口通信是一种设备间常用的串行通信方式，串口按位（bit）发送和接收字节。尽管比特字节（byte）的串行通信慢，但是串口可以在使用一根线发送数据的同时用另一根线接收数据。</p><p>串口通信协议是指规定了数据包的内容，内容包含了起始位、主体数据、校验位及停止位，双方需要约定一致的数据包格式才能正常收发数据的有关规范。在串口通信中，常用的协议包括RS-232、 RS-422 和 RS-485 等。</p><p>随着科技的发展， RS-232 在工业上还有广泛的使用，但是在商业技术上，已经慢慢的使用USB 转串口取代了 RS-232 串口。我们只需要在电路中添加一个 USB 转串口芯片，就可以实现USB 通信协议和标准 UART 串行通信协议的转换，而我们开发板上的 USB 转串口芯片是 CH340C 这个芯片。</p><h3 id="_2-通信协议" tabindex="-1">2. 通信协议 <a class="header-anchor" href="#_2-通信协议" aria-label="Permalink to &quot;2. 通信协议&quot;">​</a></h3><p>串口通信的数据包由发送设备的 TXD 接口传输到接收设备的 RXD 接口。在串口通信的协议层中，规定了数据包的内容，它由起始位、主体数据、校验位以及停止位组成，通讯双方的数据包格式要约定一致才能正常收发数据，其组成如图：</p><p><img src="'+m+'" alt="image-20250921144959307"></p><p>串口通信协议数据包组成可以分为波特率和数据帧格式两部分。</p><h4 id="_2-1-波特率" tabindex="-1">2.1 波特率 <a class="header-anchor" href="#_2-1-波特率" aria-label="Permalink to &quot;2.1 波特率&quot;">​</a></h4><p>后面主要是学习串口异步通信，异步通信是不需要时钟信号的，但是这里需要我们约定好两个设备的波特率。 波特率表示每秒钟传送的码元符号的个数，所以它决定了数据帧里面每一个位的时间长度。两个要通信的设备的波特率一定要设置相同，我们常见的波特率是 4800、9600、 115200 等。</p><h4 id="_2-2-数据帧格式" tabindex="-1">2.2 数据帧格式 <a class="header-anchor" href="#_2-2-数据帧格式" aria-label="Permalink to &quot;2.2 数据帧格式&quot;">​</a></h4><p>数据帧格式需要我们提前约定好，串口通信的数据帧包括起始位、停止位、有效数据位以及校验位。</p><ul><li><p><strong>起始位和停止位</strong>：串口通信的一个数据帧是从起始位开始，直到停止位。数据帧中的起始位是由一个逻辑 0的数据位表示，而数据帧的停止位可以是 0.5、 1、 1.5 或 2 个逻辑 1 的数据位表示，只要双方约定一致即可。</p></li><li><p><strong>有效数据位</strong>：数据帧的起始位之后，就接着是数据位，也称有效数据位，这就是我们真正需要的数据，有效数据位通常会被约定为 5、 6、 7 或者 8 个位长。有效数据位是低位（LSB）在前，高位（MSB）在后。</p></li><li><p><strong>校验位</strong>：校验位可以认为是一个特殊的数据位。校验位一般用来判断接收的数据位有无错误，检验方法有：奇检验、偶检验、 0 检验、 1 检验以及无检验。</p></li></ul><p>（1）奇校验是指有效数据为和校验位中“1”的个数为奇数，比如一个 8 位长的有效数据为：10101001，总共有 4 个“1”，为达到奇校验效果，校验位设置为“1”，最后传输的数据是 8 位的有效数据加上 1 位的校验位总共 9 位。</p><p>（2）偶校验与奇校验要求刚好相反，要求帧数据和校验位中“1”的个数为偶数，比如数据帧：11001010，此时数据帧“ 1”的个数为 4 个，所以偶校验位为“0”。</p><p>（3）0 校验是指不管有效数据中的内容是什么，校验位总为“0”， 1 校验是校验位总为“1”。</p><p>（4）无校验是指数据帧中不包含校验位。</p>',20))])}const b=o(d,[["render",Q]]);export{x as __pageData,b as default};
