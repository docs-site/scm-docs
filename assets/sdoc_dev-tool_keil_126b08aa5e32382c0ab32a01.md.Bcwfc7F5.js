import{_ as a,c as n,o as l,b0 as p}from"./chunks/framework.C5ev1SXp.js";const t="/scm-docs/assets/image-20250916185757278.CBFldyzn.png",h="/scm-docs/assets/image-20250916190219214.Lw35o-PM.png",i="/scm-docs/assets/image-20230422193850860.B3-ZL2OJ.png",e="/scm-docs/assets/image-20230422194207858.DV1t6WI8.png",k="/scm-docs/assets/image-20230422194517713.DLX6OlEM.png",r="/scm-docs/assets/image-20230422194758191.C_LMRPRz.png",E="/scm-docs/assets/image-20230422194844337.BpdUzntl.png",d="/scm-docs/assets/image-20230422194945952.C1RWW0ws.png",F="/scm-docs/assets/image-20230422200342045.0HtGRAn7.png",g="/scm-docs/assets/image-20230422201234276.BDVAD5i5.png",c="/scm-docs/assets/image-20230422201648391.DfaNJt5R.png",y="/scm-docs/assets/image-20230423120452381.HCZZLkbu.png",o="/scm-docs/assets/image-20230422201734069.CJnWV8vF.png",C="/scm-docs/assets/image-20230422202101155.BzpYt_br.png",_="/scm-docs/assets/image-20230422202608565.Dn1cYKDM.png",m="/scm-docs/assets/image-20230422203009385.CEVNVMdj.png",b="/scm-docs/assets/image-20230422203051400.DwkmcKzr.png",u="/scm-docs/assets/image-20230422203630724.DioAIKvs.png",A="/scm-docs/assets/image-20230422220056965.BQTFUrQd.png",T="/scm-docs/assets/image-20230422220233554.BsViP4wr.png",B="/scm-docs/assets/image-20230422220926951.C_NKf7cS.png",D="/scm-docs/assets/image-20230422221042807.CKCxZpGh.png",R="/scm-docs/assets/image-20250916192313893.B1CwUOAQ.png",P="/scm-docs/assets/image-20250916192630053.aLvtsfam.png",S="/scm-docs/assets/image-20250916194134800.BmKGrjVO.png",I="/scm-docs/assets/image-20250916195723541.rY_BGmvH.png",M="/scm-docs/assets/image-20250916195811748.se6sB90M.png",O="/scm-docs/assets/image-20250916200700920.DesOyFjD.png",$="/scm-docs/assets/image-20250916200930744.BMV_Ko_c.png",L="/scm-docs/assets/image-20250916201150885.Dbj958tD.png",q="/scm-docs/assets/image-20250916201403139.CSU0-t_G.png",z=JSON.parse('{"title":"LV002-工程创建","description":null,"frontmatter":{"title":"LV002-工程创建","date":"2025-09-16T18:36:02.000Z","icon":"famicons:logo-markdown","permalink":"/sdoc/dev-tool/keil/126b08aa5e32382c0ab32a01","index":true,"tags":null,"categories":null,"copyright":false,"keywords":null,"cover":null,"comments":null,"mathjax":null,"top":null,"description":null,"tdoc":{"detailDate":"2025-09-16T18:36:02.898Z","fulluuid":"c0ab32a01a744756b6c0c3e4231ed9aa","useduuid":"c0ab32a01"}},"headers":[],"relativePath":"sdoc/dev-tool/keil/126b08aa5e32382c0ab32a01.md","filePath":"sdoc/01-开发工具/01-keil/LV002-工程创建.md","lastUpdated":1758153691000}'),H={name:"sdoc/dev-tool/keil/126b08aa5e32382c0ab32a01.md"};function x(f,s,J,N,v,U){return l(),n("div",null,[...s[0]||(s[0]=[p('<h1 id="lv002-工程创建" tabindex="-1">LV002-工程创建 <a class="header-anchor" href="#lv002-工程创建" aria-label="Permalink to &quot;LV002-工程创建&quot;">​</a></h1><p>接下来就是工程创建啦。</p><h2 id="一、库文件" tabindex="-1">一、库文件 <a class="header-anchor" href="#一、库文件" aria-label="Permalink to &quot;一、库文件&quot;">​</a></h2><p>在STM32的开发中，ST（意法半导体）提供了多种软件库来帮助开发者简化开发流程，提高开发效率。其中，<strong>标准外设库（Standard Peripheral Library, SPL）</strong> 和 <strong>硬件抽象层库（Hardware Abstraction Layer Library, HAL）</strong> 是最为经典和常用的两种。</p><h3 id="_1-标准外设库-standard-peripheral-library-spl" tabindex="-1">1. 标准外设库 (Standard Peripheral Library, SPL) <a class="header-anchor" href="#_1-标准外设库-standard-peripheral-library-spl" aria-label="Permalink to &quot;1. 标准外设库 (Standard Peripheral Library, SPL)&quot;">​</a></h3><p>标准库，也称为SPL，是ST早期为STM32F1, F2, F4, L1等系列提供的库函数。它是对STM32芯片底层寄存器操作的一种封装，提供了一组C语言API用于配置和控制所有片上外设（如GPIO, USART, SPI, I2C, TIM等）。</p><ul><li><strong>中度抽象</strong>：它没有完全隐藏硬件的细节，开发者仍然需要关心部分寄存器配置和时钟使能流程，但避免了直接读写寄存器的繁琐和易错性。</li><li><strong>流程清晰</strong>：代码结构通常遵循“初始化结构体定义 → 配置参数 → 调用初始化函数 → 使用外设”的模式。</li><li><strong>与芯片紧密相关</strong>：不同系列的STM32芯片（如F1和F4）其标准库不能直接通用，API和头文件有差异。</li><li><strong>已停止更新</strong>：ST已于2019年底正式停止更新和维护标准库，新推出的芯片系列（如STM32G0, G4, L4+, L5, H7等）不再提供标准库支持。</li></ul><blockquote><p>标准库的版本：STM32F10x_StdPeriph_Lib_V3.6.0。下载地址：<a href="https://www.st.com/zh/embedded-software/stm32-standard-peripheral-libraries.html" target="_blank" rel="noreferrer">STM32标准外设软件库 - 意法半导体STMicroelectronics</a></p></blockquote><h3 id="_2-硬件抽象层库-hardware-abstraction-layer-library-hal" tabindex="-1">2. 硬件抽象层库 (Hardware Abstraction Layer Library, HAL) <a class="header-anchor" href="#_2-硬件抽象层库-hardware-abstraction-layer-library-hal" aria-label="Permalink to &quot;2. 硬件抽象层库 (Hardware Abstraction Layer Library, HAL)&quot;">​</a></h3><p>HAL库是ST为了替代标准库而推出的新一代库，旨在提供更高层次的抽象，实现跨STM32产品线的最大限度的可移植性。它是STM32Cube生态系统（包含STM32CubeMX配置工具和STM32CubeIDE）的核心组成部分。</p><ul><li><strong>高度抽象</strong>：HAL库将硬件底层细节完全封装起来，提供统一的、面向功能的API（如<code>HAL_UART_Transmit()</code>）。开发者无需深入研究芯片数据手册和参考手册即可快速上手。</li><li><strong>跨系列兼容</strong>：HAL库的API在不同系列的STM32芯片上保持一致，极大地简化了项目移植工作。</li><li><strong>集成STM32CubeMX</strong>：与STM32CubeMX图形化配置工具无缝集成，可以自动生成初始化代码，极大提升了项目搭建和外设配置的效率。</li><li><strong>功能丰富</strong>：支持高级功能，如DMA、中断、各种通信协议的高级模式等，并且内置了超时管理和错误处理机制。</li><li><strong>持续维护</strong>：ST持续为所有新产品线开发和维护HAL库，是ST主推的开发方式。</li></ul><blockquote><p>HAL库的版本：STM32Cube_FW_F1_V1.8.0。下载地址：<a href="https://www.st.com/zh/embedded-software/stm32cubef1.html#get-software" target="_blank" rel="noreferrer">STM32CubeF1 - STM32Cube MCU包，用于STM32F1系列（HAL、底层API和CMSIS（CORE、DSP和RTOS）、USB、TCP/IP、File system、RTOS和Graphic - 附带在以下ST板上运行的示例：STM32 Nucleo、探索套件和评估板） - 意法半导体STMicroelectronics</a></p></blockquote><h3 id="_3-优劣对比分析" tabindex="-1">3. 优劣对比分析 <a class="header-anchor" href="#_3-优劣对比分析" aria-label="Permalink to &quot;3. 优劣对比分析&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">特性维度</th><th style="text-align:left;">标准库 (SPL)</th><th style="text-align:left;">HAL库 (HAL)</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>抽象层次</strong></td><td style="text-align:left;">中度抽象，接近寄存器</td><td style="text-align:left;">高度抽象，接近功能</td></tr><tr><td style="text-align:left;"><strong>代码效率</strong></td><td style="text-align:left;"><strong>高</strong>。代码更精简，执行效率高，资源占用少。</td><td style="text-align:left;"><strong>较低</strong>。因通用性而引入更多判断和封装，代码体积大，执行效率相对较低。</td></tr><tr><td style="text-align:left;"><strong>可移植性</strong></td><td style="text-align:left;"><strong>差</strong>。高度依赖特定芯片系列，跨系列移植需大量修改。</td><td style="text-align:left;"><strong>极佳</strong>。统一的API接口，跨系列移植通常只需修改少量硬件相关配置。</td></tr><tr><td style="text-align:left;"><strong>易用性</strong></td><td style="text-align:left;"><strong>中等</strong>。需理解外设工作原理和配置流程，上手有门槛。</td><td style="text-align:left;"><strong>高</strong>。配合CubeMX可“点点鼠标”生成代码，API功能化，新手友好。</td></tr><tr><td style="text-align:left;"><strong>维护性</strong></td><td style="text-align:left;"><strong>已停止维护</strong>。无新功能，无对新芯片的支持。</td><td style="text-align:left;"><strong>持续维护更新</strong>。Bug修复，新功能添加，支持所有新芯片。</td></tr><tr><td style="text-align:left;"><strong>社区与生态</strong></td><td style="text-align:left;">资料丰富（尤其是老项目），但逐渐过时。</td><td style="text-align:left;">当前主流，官方大力推广，新教程和项目多，社区活跃。</td></tr><tr><td style="text-align:left;"><strong>适用场景</strong></td><td style="text-align:left;">1. 资源极度受限的旧项目。<br>2. 对性能和代码尺寸有极致要求的场景。 <br>3. 维护遗留老代码。</td><td style="text-align:left;">1. <strong>新项目开发的首选</strong>。 <br>2. 快速原型开发。 <br>3. 需要跨芯片平台移植的项目。 <br>4. 初学者学习和使用。</td></tr></tbody></table><h2 id="二、工程创建" tabindex="-1">二、工程创建 <a class="header-anchor" href="#二、工程创建" aria-label="Permalink to &quot;二、工程创建&quot;">​</a></h2><h3 id="_1-工程目录准备" tabindex="-1">1. 工程目录准备 <a class="header-anchor" href="#_1-工程目录准备" aria-label="Permalink to &quot;1. 工程目录准备&quot;">​</a></h3><ul><li>（1）创建工程目录，我们的工程文件一会可以放在这个目录下。</li></ul><img src="'+t+'" alt="image-20250916185757278" style="zoom:50%;"><ul><li>（2）创建目录，并拷贝相关文件</li></ul><p>这里我为了偷懒，我写了一个shell脚本，上边我创建的目录是在在虚拟机的共享目录下，所以我们可以直接在虚拟机中通过执行脚本来创建和拷贝相关文件，最后再chuangjianMDK工程，所需要执行的脚本如下：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BLACK</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\\033[1;30m&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;\\033[1;31m&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 红</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GREEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;\\033[1;32m&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 绿</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">YELLOW</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;\\033[1;33m&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 黄</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BLUE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;\\033[1;34m&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 蓝</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PINK</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;\\033[1;35m&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 紫</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CYAN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;\\033[1;36m&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 青</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WHITE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;\\033[1;37m&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 白</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;\\033[0m&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 清除颜色</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 变量定义</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">STD_PROJECT_ROOT_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">StdPeriph_Lib_Template</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">STD_LIB_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">STM32F10x_StdPeriph_Lib_V3.6.0</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">STD_STARTUP_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">startup_stm32f10x_hd.s</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HAL_PROJECT_ROOT_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">STM32Cube_FW_F1_Template</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HAL_LIB_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">STM32Cube_FW_F1_V1.8.0</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_TYPE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xxx lib project&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">STD_PROJECT_DRIVER_DIRNAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;STM32F10x_FWLib&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HAL_PROJECT_DRIVER_DIRNAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HAL_lib&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_DIR_NAME[0]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                # STM32F10x_FWLib/HAL_lib 存放 ST 官方提供的库函数源码文件</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_DIR_NAME[1]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CORE&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # CORE 用来存放核心文件和启动文件</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_DIR_NAME[2]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;USER&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # USER 用来放我们的代码工程文件</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_DIR_NAME[3]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;OBJ&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">             # OBJ  用来存放编译过程文件以及 hex 文件               </span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_DIR_NAME[4]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HARDWARE&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # HARDWARE 存放用户编写的外设驱动文件</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">declare</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PROJECT_DIR_PATH           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 定义一个字典，后边组合生成键值对，字典必须先声明</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CURRENT_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_ROOT_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${CURRENT_PATH}</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LIB_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${CURRENT_PATH}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 提示信息打印函数</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> echo_menu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GREEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}================================================${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WHITE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}# CURRENT_PATH          : ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CURRENT_PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WHITE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}# STD_PROJECT_ROOT_NAME : ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">STD_PROJECT_ROOT_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WHITE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}# HAL_PROJECT_ROOT_NAME : ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HAL_PROJECT_ROOT_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WHITE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}# STD_LIB_NAME          : ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">STD_LIB_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WHITE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}# HAL_LIB_NAME          : ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HAL_LIB_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GREEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}* [0] 拷贝STM32工程所需标准库文件(标准库工程)&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GREEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}* [1] 拷贝STM32工程所需HAL库文件(HAL库工程)&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GREEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}================================================${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    read</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;选择功能,默认选择0:&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> choose</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">choose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">choose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ];</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # [0] 拷贝STM32工程所需标准库文件</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        PROJECT_ROOT_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${CURRENT_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${STD_PROJECT_ROOT_NAME}</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LIB_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${CURRENT_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${STD_LIB_NAME}</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        PROJECT_DIR_NAME[0]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${STD_PROJECT_DRIVER_DIRNAME}</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        PROJECT_TYPE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;STD_lib_project&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    elif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">choose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ];</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                        # [0] 拷贝STM32工程所需HAL库文件</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        PROJECT_ROOT_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${CURRENT_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${HAL_PROJECT_ROOT_NAME}</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        LIB_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${CURRENT_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${HAL_LIB_NAME}</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        PROJECT_DIR_NAME[0]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${HAL_PROJECT_DRIVER_DIRNAME}</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        PROJECT_TYPE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HAL_lib_project&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fi</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GREEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}================================================${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GREEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}相关动态参数如下：${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PINK</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}# PROJECT_TYPE      : ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_TYPE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PINK</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}# PROJECT_ROOT_PATH : ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_ROOT_PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PINK</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}# LIB_PATH          : ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LIB_PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PINK</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}# PROJECT_DIR_NAME  : ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_DIR_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]}${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GREEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}================================================${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> copy_hal_lib_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Drivers/STM32F1xx_HAL_Driver/Inc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[0]}]}</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Drivers/STM32F1xx_HAL_Driver/Src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[0]}]}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/arm/startup_stm32f103xe.s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[1]}]}</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Drivers/CMSIS/Include/cmsis_armcc.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[1]}]}</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Drivers/CMSIS/Include/cmsis_armclang.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[1]}]}</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Drivers/CMSIS/Include/cmsis_compiler.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[1]}]}</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Drivers/CMSIS/Include/cmsis_version.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[1]}]}</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Drivers/CMSIS/Include/core_cm3.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[1]}]}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]}</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]}</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Projects/STM3210E_EVAL/Templates/Inc/main.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]}</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Projects/STM3210E_EVAL/Templates/Inc/stm32f1xx_hal_conf.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]}</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Projects/STM3210E_EVAL/Templates/Inc/stm32f1xx_it.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Projects/STM3210E_EVAL/Templates/Src/main.c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]}</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Projects/STM3210E_EVAL/Templates/Src/system_stm32f1xx.c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]}</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Projects/STM3210E_EVAL/Templates/Src/stm32f1xx_it.c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]}</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Projects/STM3210E_EVAL/Templates/Src/stm32f1xx_hal_msp.c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]}</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> copy_std_lib_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Libraries/STM32F10x_StdPeriph_Driver/src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[0]}]} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># STM32F10x_FWLib</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -pr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Libraries/STM32F10x_StdPeriph_Driver/inc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[0]}]} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># STM32F10x_FWLib</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[1]}]} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CORE</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Libraries/CMSIS/CM3/CoreSupport/core_cm3.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[1]}]} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CORE</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/startup/arm/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${STD_STARTUP_NAME} ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[1]}]} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CORE</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># USER</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># USER</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># USER</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Project/STM32F10x_StdPeriph_Template/main.c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># USER</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Project/STM32F10x_StdPeriph_Template/stm32f10x_conf.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># USER</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Project/STM32F10x_StdPeriph_Template/stm32f10x_it.c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># USER</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${LIB_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Project/STM32F10x_StdPeriph_Template/stm32f10x_it.h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_PATH[${PROJECT_DIR_NAME[2]}]} </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># USER</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> copy_files_to_project</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_ROOT_PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ];</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_ROOT_PATH}</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fi</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_ROOT_PATH}</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WHITE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}# CURRENT_PATH      : $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 创建相关目录</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DIR_NAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_DIR_NAME[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        do</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_ROOT_PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DIR_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ];</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${PROJECT_ROOT_PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${DIR_NAME}</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            else</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">YELLOW</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}[WARN]${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DIR_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} 目录已存在!!!${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            fi</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            PROJECT_DIR_PATH[$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{DIR_NAME}</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${PROJECT_ROOT_PATH}</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{DIR_NAME}</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        done</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #打印所有key值</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GREEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}[INFO]${</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_DIR_PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]}${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #打印所有value</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GREEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}[INFO]${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_DIR_PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]}${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CLS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 拷贝相关文件</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_TYPE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;STD_lib_project&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ];</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        copy_std_lib_files</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        exit</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    elif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PROJECT_TYPE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;HAL_lib_project&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ];</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        copy_hal_lib_files</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        exit</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fi</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 功能实现</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">echo_menu</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">copy_files_to_project</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br></div></div><p>使用脚本的话，我们需要的文件如下：</p><img src="'+h+'" alt="image-20250916190219214" style="zoom:50%;"><p>反正这几个目录还有这个脚本放在同一级目录下就可以了，执行完脚本，目录结构如下：</p><img src="'+i+'" alt="image-20230422193850860" style="zoom:33%;"><h3 id="_2-mdk工程创建" tabindex="-1">2. MDK工程创建 <a class="header-anchor" href="#_2-mdk工程创建" aria-label="Permalink to &quot;2. MDK工程创建&quot;">​</a></h3><h4 id="_2-1-创建空工程" tabindex="-1">2.1 创建空工程 <a class="header-anchor" href="#_2-1-创建空工程" aria-label="Permalink to &quot;2.1 创建空工程&quot;">​</a></h4><ul><li>（1）创建工程</li></ul><p>点击 MDK 的菜单 ：【Project】 →【New Uvision Project】 ，然后将目录定位到刚才建立的文件夹&quot;Template&quot; 之下，我们的代码工程文件放在 USER 目录，这个目录就看个人喜好了，也可以命名成别的，注意在上一步创建目录的时候改掉就好了。</p><img src="'+e+'" alt="image-20230422194207858" style="zoom:53%;"><p>然后定位到 USER 目录下面，我们的工程文件就都保存到 USER 文件夹下面。工程命名为Template，点击保存。</p><img src="'+k+'" alt="image-20230422194517713" style="zoom:43%;"><ul><li>（2）选择芯片型号</li></ul><p>接下来会出现一个选择 CPU 的界面，就是选择我们的芯片型号。 因为我使用的 STM32 型号为 STM32F103ZET6，所以在这里我们选【STMicroelectronics】 →【STM32F1 Series】→【STM32F103】→【STM32F103ZET6】（如果使用的是其他系列的芯片，选择相应的型号就可以了，特别注意： 一定要安装对应的器件 pack 才会显示这些内容。</p><img src="'+r+'" alt="image-20230422194758191" style="zoom:50%;"><ul><li>（3）点击 OK， MDK 会弹出 Manage Run-Time Environment 对话框，</li></ul><img src="'+E+'" alt="image-20230422194844337" style="zoom:37%;"><p>这是 MDK5 新增的一个功能，在这个界面，我们可以添加自己需要的组件，从而方便构建开发环境，我们直接点击 Cancel 即可。然后工程框架就就创建好啦：</p><img src="'+d+'" alt="image-20230422194945952" style="zoom:33%;"><h4 id="_2-2-添加文件到工程" tabindex="-1">2.2 添加文件到工程 <a class="header-anchor" href="#_2-2-添加文件到工程" aria-label="Permalink to &quot;2.2 添加文件到工程&quot;">​</a></h4><p>我们按照之前拷贝文件的目录结构，来在工程中创建相应的文件夹来管理代码：</p><img src="'+i+'" alt="image-20230422193850860" style="zoom:43%;"><p>这里以标准库工程为例：</p><img src="'+F+'" alt="image-20230422200342045" style="zoom:43%;"><p>（1）Project Targets 一栏，我们将 Target 名字修改为 Template,然后在 Groups 一栏删掉一个 SourceGroup1，建立三个 Groups： USER,CORE,FWLIB。然后点击 OK，可以看到我们的 Target名字以及 Groups 情况。</p><p>（2）往 Group （USER,CORE,FWLIB）里面添加我们需要的文件。</p><p>STM32F10x_FWLib/src 下面，将里面所有的文件选中(Ctrl+A)，然后点击 Add，然后 Close 。这里需要说明一下，对于我们写代码，如果我们只用到了其中的某个外设，我们就可以不用添加没有用到的外设的库文件。例如我只用 GPIO，我可以只用添加 stm32f10x_gpio.c 而其他的可以不用添加。这里我们全部加进来是为了后面方便，不用每次添加，当然这样的坏处是工程太大，编译起来速度慢，用户可以自行选择。</p><p>用同样的方法，将 Groups 定位到 CORE 和 USER 下面，添加需要的文件。这里我们的 CORE 下面需要添加的文件为 core_cm3.c， startup_stm32f10x_hd.s (注意，默认添加的时候文件类型为.c，也就是添加 startup_stm32f10x_hd.s 启动文件的时候，需要选择文件类型为 All files 才能看得到这个文件)， USER 目录下面需要添加的文件为 main.c， stm32f10x_it.c，system_stm32f10x.c。</p><p>最终我们的工程目录就如下所示：</p><img src="'+g+'" alt="image-20230422201234276" style="zoom:43%;"><p>右边的图有些文件为什么带个钥匙标记？因为这些文件是只读的。</p><h4 id="_2-3-编译中间文件位置" tabindex="-1">2.3 编译中间文件位置 <a class="header-anchor" href="#_2-3-编译中间文件位置" aria-label="Permalink to &quot;2.3 编译中间文件位置&quot;">​</a></h4><ul><li>设置编译中间文件编译后存放目录</li></ul><p>方法是点击魔术棒，然后选择“Output”选项下面的“Select folder for objects…” ,然后选择目录为我们上面新建的 OBJ 目录。 这里大家注意，如果我们不设置 Output 路径，那么默认的编译中间文件存放目录就是 MDK 自动生成的 Objects 目录和 Listings 目录。</p><img src="'+c+'" alt="image-20230422201648391" style="zoom:50%;"><p>如果我们没有设置的话，将会在工程文件所在的目录生成这个两个目录：</p><img src="'+y+'" alt="image-20230423120452381" style="zoom:43%;"><h4 id="_2-4-头文件位置" tabindex="-1">2.4 头文件位置 <a class="header-anchor" href="#_2-4-头文件位置" aria-label="Permalink to &quot;2.4 头文件位置&quot;">​</a></h4><p>接下来我们编译一下工程，我们会发现全是这种报错：</p><img src="'+o+'" alt="image-20230422201734069" style="zoom:33%;"><p>这是因为编译的时候找不到头文件位置导致的，我们要注意对于任何一个工程，我们都需要把工程中引用到的所有头文件的路径都包含到进来。 回到工程主菜单，点击魔术棒图标，会弹出来一个菜单，然后点击 c/c++选项.然后点击Include Paths 右边的按钮。弹出一个添加 path 的对话框，然后我们将图上面的 3 个目录添加进去。记住， <strong>keil 只会在一级目录查找</strong>，所以如果目录下面还有子目录，记得 path一定要定位到最后一级子目录，然后点击 OK。</p><img src="'+C+'" alt="image-20230422202101155" style="zoom:50%;"><p>对于HAL库工程也是一模一样的操作。</p><h4 id="_2-5-全局宏定义与报错解决" tabindex="-1">2.5 全局宏定义与报错解决 <a class="header-anchor" href="#_2-5-全局宏定义与报错解决" aria-label="Permalink to &quot;2.5 全局宏定义与报错解决&quot;">​</a></h4><ul><li>（1）标准库创建的工程</li></ul><p>我们再编译程序，会发现还是有很多警告和报错：</p><img src="'+_+'" alt="image-20230422202608565" style="zoom:33%;"><p>这是因为库函数在配置和选择外设的时候通过宏定义来选择的，所以我们需要配置一个全局的宏定义变量。 我们还是在添加头文件路径的选项卡中，我们定位到 c/c++界面，然后填写</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>STM32F10X_HD,USE_STDPERIPH_DRIVER</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>到 Define 输入框里面(请注意，两个标识符中间是逗号不是句号。如果用的是中容量那么STM32F10X_HD 修改为 STM32F10X_MD，小容量修改为 STM32F10X_LD，然后点击 OK。</p><img src="'+m+'" alt="image-20230422203009385" style="zoom:50%;"><p>然后我们再编译，会发现，竟然还有一个错，这里明显是说打不开这个头文件，我们双击这个错误，MDK会自动定位到出错的地方。</p><img src="'+b+`" alt="image-20230422203051400" style="zoom:33%;"><p>这个错误出现在main.c中，这是因为这个main.c使我们从标准库的模板中复制出来的，主函数中添加了一些对应的评估板的东西，而调用到了这个头文件，但实际上我们并不需要这些，我们吧main.c文件内容改成这样，以后添加自己的代码就好，之前的可以不要：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;stm32f10x.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>然后我们再编译就不会报错啦，这样我们就得到了一个没有error，没有warn的工程模板啦：</p><img src="`+u+'" alt="image-20230422203630724" style="zoom:50%;"><ul><li>（2）HAL库创建的工程</li></ul><p>上边是标准库的一些问题和解决方法，那么HAL库呢？ 首先对于HAL库的话在 c/c++界面 填写一下宏：</p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>USE_HAL_DRIVER,STM32F103xE</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后我们编译，会看到如下情况：</p><img src="'+A+'" alt="image-20230422220056965" style="zoom:50%;"><p>会发现有3个error，全都是打不开这个文件，这个跟标准库，我们其实并没有用到这个文件，这里的引用删掉就好啦，然后我们继续编译，神奇的事情发生了，报错更多了：</p><img src="'+T+'" alt="image-20230422220233554" style="zoom:50%;"><p>这些都是在报一些个符号重定义，这几个报错涉及到以下三个文件：</p><p>stm32f1xx_hal_msp_template.c 文件内容是一些空函数，一般不需要引入到工程中，我们从工程中去掉这个文件。</p><p>stm32f1xx_hal_timebase_tim_template.c和stm32f1xx_hal_timebase_rtc_alarm_template.c里边的没有研究过，不过看命名，应该也是一些例子之类的，他们并不是我们需要的驱动文件，我们把这两个文件也去掉。</p><img src="'+B+'" alt="image-20230422220926951" style="zoom:50%;"><p>我们将这三个文件从工程中删除，然后重新编译工程，然后我们没啥意外的话，就可以得到一个0error 0warn的工程啦：</p><img src="'+D+'" alt="image-20230422221042807" style="zoom:50%;"><h3 id="_3-报错解决" tabindex="-1">3. 报错解决 <a class="header-anchor" href="#_3-报错解决" aria-label="Permalink to &quot;3. 报错解决&quot;">​</a></h3><blockquote><p>下面测试工程是标准库建立的工程。</p></blockquote><h4 id="_3-1-问题分析" tabindex="-1">3.1 问题分析 <a class="header-anchor" href="#_3-1-问题分析" aria-label="Permalink to &quot;3.1 问题分析&quot;">​</a></h4><p>使用V5版本编译器的MDK，按照上面的步骤就可以创建一个0 Error, 0 Warning的工程，但是，由于我装的版本太新，最终其他报错：</p><p><img src="'+R+'" alt="image-20250916192313893"></p><p>这都是库文件，理论上不应该有问题才对，从网上搜了一下，原来是编译器的问题，这里keil5.37之后使用了V6编译器：</p><img src="'+P+'" alt="image-20250916192630053" style="zoom:50%;"><p>新版本编译器对于之前的标准库可能是有不兼容的地方，具体没有深究，这里需要安装一个V5版本编译器。</p><h4 id="_3-2-编译器下载" tabindex="-1">3.2 编译器下载 <a class="header-anchor" href="#_3-2-编译器下载" aria-label="Permalink to &quot;3.2 编译器下载&quot;">​</a></h4><p>而且keil5.37后没有自带 arm compiler v5版本的编译器，显示miss compiler version 5 ，可以自行在arm官网上下载v5版编译器，我们去官网搜索<code>ACOMP5</code>这个关键字，会找到这样一份文档：<a href="https://developer.arm.com/documentation/ka005198/1-0?lang=en" target="_blank" rel="noreferrer">Arm Compiler downloads index</a>，文档中就有不同编译器版本的下载链接</p><img src="'+S+'" alt="image-20250916194134800" style="zoom:50%;"><p>发现在官网下东西还是有点麻烦的，直接在网上找了个版本，下载完毕后解压：</p><img src="'+I+'" alt="image-20250916195723541" style="zoom:50%;"><p>直接双击安装，一路默认，我使用的是默认安装目录：</p><img src="'+M+'" alt="image-20250916195811748" style="zoom:50%;"><blockquote><p><strong>注意</strong>：默认目录有坑，后面会提到，这里要安装到Keil的ARM文件夹中。</p></blockquote><h4 id="_3-3-keil配置" tabindex="-1">3.3 keil配置 <a class="header-anchor" href="#_3-3-keil配置" aria-label="Permalink to &quot;3.3 keil配置&quot;">​</a></h4><p>进入keil5软件界面，点击下图①位置的三个方块图标，在弹出页面中点击 Folders/Extensions，再点击③位置的三个小点，然后点击 Add another ARM Compiler Version to List...</p><p><img src="'+O+'" alt="image-20250916200700920"></p><p>之后可以看到ARMCC Path中多了一条5.06版本ArmCC信息。最后在点击 “魔术棒”图标，进入Target页面，可以看到ARM Compiler的选择中多了Version 5，选择Version 5，点击ok</p><img src="'+$+'" alt="image-20250916200930744" style="zoom:50%;"><p>然后重新编译，这个时候，是不是觉得没问题了？其实呢，出现了更多报错：</p><p><img src="'+L+'" alt="image-20250916201150885"></p><p>这是因为ARM编译器的安装目录需要安装在Keil的ARM文件夹中，所以这里卸载重装：</p><img src="'+q+'" alt="image-20250916201403139" style="zoom:50%;"><p>然后按照上面的方式重新配置，然后再编译，终于得到了一个0 Error(s), 0 Warning(s).的工程。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;..\\OBJ\\Template.axf&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Warning</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_4-总结" tabindex="-1">4. 总结 <a class="header-anchor" href="#_4-总结" aria-label="Permalink to &quot;4. 总结&quot;">​</a></h3><p>得出一个结论：不要追求最新版本，不然真有的折腾了！！！后来我就找了个旧一点的版本（V5.36）了。</p><blockquote><p>参考资料：</p><p><a href="https://blog.csdn.net/qq_45899177/article/details/135854420" target="_blank" rel="noreferrer">keil5.39版本报错：Start/core_cm3.c(445): error: non-ASM statement in naked function is not supported；-CSDN博客</a></p><p><a href="https://www.yiboard.com/thread-1922-1-1.html" target="_blank" rel="noreferrer">ARMLMD_LICENSE_FILE 错误解决方法 - STM32 NUCLEO - 一板网电子技术论坛</a></p></blockquote>',120)])])}const w=a(H,[["render",x]]);export{z as __pageData,w as default};
