import{_ as a,c as i,o as n,b0 as l}from"./chunks/framework.C5ev1SXp.js";const e="/scm-docs/assets/image-20230506221050587.B7tekcYZ.png",p="/scm-docs/assets/image-20230506221502585.FXzQW7ry.png",u=JSON.parse('{"title":"LV020-GPIO控制LED","description":null,"frontmatter":{"title":"LV020-GPIO控制LED","date":"2025-09-20T22:42:02.000Z","icon":"famicons:logo-markdown","permalink":"/sdoc/peripheral/gpio/126b08e805ca1e15c40474c4","index":true,"tags":null,"categories":null,"copyright":false,"keywords":null,"cover":null,"comments":null,"mathjax":null,"top":null,"description":null,"tdoc":{"detailDate":"2025-09-20T22:42:02.481Z","fulluuid":"5c40474c47fc44e49114f4489f7fb359","useduuid":"5c40474c4"}},"headers":[],"relativePath":"sdoc/peripheral/gpio/126b08e805ca1e15c40474c4.md","filePath":"sdoc/20-基本外设篇/01-GPIO/LV020-GPIO控制LED.md","lastUpdated":1758153691000}'),t={name:"sdoc/peripheral/gpio/126b08e805ca1e15c40474c4.md"};function h(r,s,k,c,d,E){return n(),i("div",null,[...s[0]||(s[0]=[l('<h1 id="lv020-gpio控制led" tabindex="-1">LV020-GPIO控制LED <a class="header-anchor" href="#lv020-gpio控制led" aria-label="Permalink to &quot;LV020-GPIO控制LED&quot;">​</a></h1><h2 id="一、基本步骤" tabindex="-1">一、基本步骤 <a class="header-anchor" href="#一、基本步骤" aria-label="Permalink to &quot;一、基本步骤&quot;">​</a></h2><p>这个实例主要是通过GPIO点亮LED灯。一般步骤如下：</p><ul><li><p>（1）使能IO口时钟。</p></li><li><p>（2）初始化IO口模式，包括GPIO工作模式（输出）、IO口速度。使用STM32CubeMX软件来进行图形化配置的话要注意一下上下拉的设置，不然很可能有莫名其妙的坑。</p></li><li><p>（3）操作IO口，输出高低电平。</p></li></ul><p>**【注意】**可以一次初始化一个IO组下的多个IO，前提是这些IO口的配置方式一样。</p><h2 id="二、硬件原理图" tabindex="-1">二、硬件原理图 <a class="header-anchor" href="#二、硬件原理图" aria-label="Permalink to &quot;二、硬件原理图&quot;">​</a></h2><img src="'+e+'" alt="image-20230506221050587" style="zoom:50%;"><h2 id="三、stm32cubemx配置" tabindex="-1">三、STM32CubeMX配置 <a class="header-anchor" href="#三、stm32cubemx配置" aria-label="Permalink to &quot;三、STM32CubeMX配置&quot;">​</a></h2><img src="'+p+`" alt="image-20230506221502585" style="zoom:50%;"><p>GPIO的配置比较简单，就上边这些选项配好就可以啦。</p><h2 id="四、led闪烁" tabindex="-1">四、LED闪烁 <a class="header-anchor" href="#四、led闪烁" aria-label="Permalink to &quot;四、LED闪烁&quot;">​</a></h2><p>上面的完成工程创建后，LED灯默认会被点亮但是，我们主函数这样写：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  HAL_Init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  SystemClock_Config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  MX_GPIO_Init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    HAL_GPIO_WritePin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    HAL_GPIO_WritePin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    HAL_Delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    HAL_GPIO_WritePin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    HAL_GPIO_WritePin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(GPIOE, GPIO_PIN_5, GPIO_PIN_SET);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    HAL_Delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,13)])])}const g=a(t,[["render",h]]);export{u as __pageData,g as default};
