import{_ as Q,c as e,o as s,b0 as d,j as t,a as o}from"./chunks/framework.C5ev1SXp.js";const r="/scm-docs/assets/image-20220918111415861.BstGjFFC.png",l="/scm-docs/assets/image-20220918111649271.V7dh_IoE.png",i="/scm-docs/assets/image-20220918112744911.DYdQWsxb.png",T="/scm-docs/assets/image-20230501212309222._oAY2ZQ0.png",n="/scm-docs/assets/image-20220918113704916.CRIo9Lfp.png",m="/scm-docs/assets/image-20230501212223021.CfhZySVM.png",h="/scm-docs/assets/image-20220918113938280.D2BhxBdG.png",p="/scm-docs/assets/image-20230501212120358.CWhncXUL.png",c="/scm-docs/assets/image-20220918115704232.CTX21U_2.png",g="/scm-docs/assets/image-20220918120645523.B9A5D6em.png",w=JSON.parse('{"title":"LV001-通信概述","description":null,"frontmatter":{"title":"LV001-通信概述","date":"2025-09-22T07:36:28.000Z","icon":"famicons:logo-markdown","permalink":"/sdoc/communication/126b09043e1c12685fda3fb8","index":true,"tags":null,"categories":null,"copyright":false,"keywords":null,"cover":null,"comments":null,"mathjax":null,"top":null,"description":null,"tdoc":{"detailDate":"2025-09-22T07:36:28.294Z","fulluuid":"85fda3fb8df54e90807dd03d5831b5bf","useduuid":"85fda3fb8"}},"headers":[],"relativePath":"sdoc/communication/126b09043e1c12685fda3fb8.md","filePath":"sdoc/60-通信专题/LV001-通信概述.md","lastUpdated":1758153691000}'),u={name:"sdoc/communication/126b09043e1c12685fda3fb8.md"},_={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},b={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"16.712ex",height:"2.034ex",role:"img",focusable:"false",viewBox:"0 -694 7386.6 899","aria-hidden":"true"};function f(x,a,L,k,V,q){return s(),e("div",null,[a[3]||(a[3]=d('<h1 id="lv001-通信概述" tabindex="-1">LV001-通信概述 <a class="header-anchor" href="#lv001-通信概述" aria-label="Permalink to &quot;LV001-通信概述&quot;">​</a></h1><h2 id="一、通信的两种方式" tabindex="-1">一、通信的两种方式 <a class="header-anchor" href="#一、通信的两种方式" aria-label="Permalink to &quot;一、通信的两种方式&quot;">​</a></h2><p>处理器与外部设备通信，按数据传送的方式，通讯可分为串行通讯与并行通讯，但是一般我们看到的大多数都是串行通信。</p><h3 id="_1-串行通信" tabindex="-1">1.串行通信 <a class="header-anchor" href="#_1-串行通信" aria-label="Permalink to &quot;1.串行通信&quot;">​</a></h3><p>串行通讯是指设备之间通过少量数据信号线(一般是 8 根以下)， 地线以及控制信号线，<strong>按数据位形式一位一位地传输数据</strong>的通讯方式。</p><ul><li><p>传输原理：数据按位顺序传输</p></li><li><p>优点：占用处理器引脚资源少</p></li><li><p>缺点：传输速度相对较慢</p></li></ul><img src="'+r+'" alt="image-20220918111415861" style="zoom:33%;"><h3 id="_2-并行通信" tabindex="-1">2.并行通信 <a class="header-anchor" href="#_2-并行通信" aria-label="Permalink to &quot;2.并行通信&quot;">​</a></h3><p>并行通讯一般是指使用 8、16、32 及 64 根或更多的数据线进行传输的通讯方式。</p><ul><li><p>传输原理：数据各个位同时传输</p></li><li><p>优点：传输速度快</p></li><li><p>缺点：占用处理器引脚资源多</p></li></ul><img src="'+l+'" alt="image-20220918111649271" style="zoom:33%;"><h3 id="_3-两种方式对比" tabindex="-1">3.两种方式对比 <a class="header-anchor" href="#_3-两种方式对比" aria-label="Permalink to &quot;3.两种方式对比&quot;">​</a></h3><table tabindex="0"><thead><tr><th>特性</th><th>串行通信</th><th>并行通信</th></tr></thead><tbody><tr><td>通信距离</td><td>较远</td><td>较近</td></tr><tr><td>抗干扰能力</td><td>较强</td><td>较弱</td></tr><tr><td>传输速率</td><td>较慢</td><td>较快</td></tr><tr><td>成本</td><td>较低</td><td>较高</td></tr></tbody></table><p>串行传输占用的通信线更少，成本低，通信速度相对较慢；并行传输占用的通信线多，成本高，通信速度相对更快。但随着对传输速度要求越来越高，并行传输开始出现信号之间的干扰，串行通信受干扰影响较小，之后又发展出差分传输等技术，极大的提高了串行传输速率，使得串行通信速度可能比并行通信速度更快。</p><p>串行通信就像单车道，行驶的车辆需要依次行驶。并行通信就像多车道，同时多辆汽车并排行驶。但当车速很快的时候，多车道上并列行驶的汽车之间会形成“气流”相互干扰，单车道则受影响较小，速度能够进一步提升。</p><h2 id="二、串行通信数据方向" tabindex="-1">二、串行通信数据方向 <a class="header-anchor" href="#二、串行通信数据方向" aria-label="Permalink to &quot;二、串行通信数据方向&quot;">​</a></h2><p>在串行通信中，按照通信的方向，通信又分为全双工、半双工及单工通信。</p><h3 id="_1-单工通信" tabindex="-1">1.单工通信 <a class="header-anchor" href="#_1-单工通信" aria-label="Permalink to &quot;1.单工通信&quot;">​</a></h3><p>任何时刻，数据传输只支持数据在一个方向上传输，即一个固定为发送设备，另一个固定为接收设备。</p><img src="'+i+'" alt="image-20220918112744911" style="zoom:50%;"><p>例如收音机， 信息数据只能由广播站发送给收音机，单向不可逆的 。</p><img src="'+T+'" alt="image-20230501212309222" style="zoom:50%;"><h3 id="_2-半双工通信" tabindex="-1">2.半双工通信 <a class="header-anchor" href="#_2-半双工通信" aria-label="Permalink to &quot;2.半双工通信&quot;">​</a></h3><p>数据可以在两个方向上传输，但是，<strong>在某一时刻，只允许数据在一个方向上传输</strong>，它实际上是一种可以切换方向的单工通信。</p><img src="'+n+'" alt="image-20220918113704916" style="zoom:50%;"><p>例如对讲机， 双向都可得到信息，但是同一时刻只能是一方发射另一方接收，发射和接收不能同时进行。</p><img src="'+m+'" alt="image-20230501212223021" style="zoom:50%;"><h3 id="_3-全双工通信" tabindex="-1">3.全双工通信 <a class="header-anchor" href="#_3-全双工通信" aria-label="Permalink to &quot;3.全双工通信&quot;">​</a></h3><p>允许数据同时在两个方向上传输，因此，全双工通信是两个单工通信方式的结合，它要求发送设备和接收设备都有独立的接收和发送能力。</p><img src="'+h+'" alt="image-20220918113938280" style="zoom:50%;"><p>比如生活中的电话，全双工就像电话通信， 双方任意时刻都可以同时收发信息 。</p><img src="'+p+'" alt="image-20230501212120358" style="zoom:50%;"><h2 id="三、串行通信方式" tabindex="-1">三、串行通信方式 <a class="header-anchor" href="#三、串行通信方式" aria-label="Permalink to &quot;三、串行通信方式&quot;">​</a></h2><p>在串行通信中，数据在双方之间传输时，需要制定规则保证数据传输的准确。 根据通信过程中是否有使用到时钟信号进行区分，又分为同步和异步两种。</p><h3 id="_1-同步通信" tabindex="-1">1.同步通信 <a class="header-anchor" href="#_1-同步通信" aria-label="Permalink to &quot;1.同步通信&quot;">​</a></h3><p>在同步通讯中，收发设备双方会使用一根信号线表示时钟信号，在时钟信号的驱动下双方进行协调， 同步数据。 通讯中通常双方会统一规定在时钟信号的上升沿或下降沿对数据线进行采样。比如常见的SPI、 I2C。</p><img src="'+c+'" alt="image-20220918115704232" style="zoom:50%;"><h3 id="_2-异步通信" tabindex="-1">2.异步通信 <a class="header-anchor" href="#_2-异步通信" aria-label="Permalink to &quot;2.异步通信&quot;">​</a></h3><p>在异步通讯中<strong>不使用时钟信号进行数据同步</strong>，它们直接在数据信号中<strong>穿插一些同步用的信号位</strong>，或者把主体数据进行打包， 以数据帧的格式传输数据，某些通讯中还需要双方约定数据的传输速率，以便更好地同步。比如UART、 1-Wire。</p><img src="'+g+'" alt="image-20220918120645523" style="zoom:45%;"><h3 id="_3-两者比较" tabindex="-1">3.两者比较 <a class="header-anchor" href="#_3-两者比较" aria-label="Permalink to &quot;3.两者比较&quot;">​</a></h3><p>在同步通讯中，数据信号所传输的内容绝大部分就是有效数据，而异步通讯中会包含有帧的各种标识符，所以<strong>同步通讯的效率更高</strong>， 但是同步通讯双方的时钟允许误差较小，而<strong>异步通讯双方的时钟允许误差较大</strong>。</p><h2 id="四、通信速率" tabindex="-1">四、通信速率 <a class="header-anchor" href="#四、通信速率" aria-label="Permalink to &quot;四、通信速率&quot;">​</a></h2><h3 id="_1-比特率与波特率" tabindex="-1">1. 比特率与波特率 <a class="header-anchor" href="#_1-比特率与波特率" aria-label="Permalink to &quot;1. 比特率与波特率&quot;">​</a></h3><p>对于同步通信，通信速率由时钟信号决定，时钟信号越快，传输速度就越快。对于异步通信，需要收发双方提前统一通信速率，这也就是我们串口调试时，波特率不对显示乱码的原因。</p><p>举个例子：假设发送端时钟频率为1Mhz，对应时钟周期则为1us, 接收端时钟频率为10Mhz，对应时钟周期则为0.1us。现在发送端发送一个数据0x1，就会产生一个持续时间为1us高电平，接收端接收到这个1us的高电平时，会当作是10个0.1us的高电平，认为收到了10个0x1。这时双方数据就乱套了，因此需要一个统一的时钟标准。</p><p>通常使用比特率来描述通信速率的快慢 。<strong>比特率</strong>（ Bitrate） ： 系统在单位时间内传输的比特位（二进制0或1）个数，通常用Rb表示，单位是比特/秒（ bit/s），缩写为bps。</p><p>容易与比特率混淆的概念是“<strong>波特率</strong>”( Baudrate )，系统在单位时间内传输的码元个数，通常用RB表示，单位是波特（ Bd） 。100bit/s即是一秒钟传输100个0或1， 100Bd即是一秒钟传输100个码元。</p><h3 id="_2-码元" tabindex="-1">2. 码元 <a class="header-anchor" href="#_2-码元" aria-label="Permalink to &quot;2. 码元&quot;">​</a></h3><p>码元就是“ 承载信息量的基本信号单位”，以一条电线上传输的信号为例，码元就是电线上的电平值。如果电线上电平只有0和3.3V两种选择，传输的信号是这2种电平之一，码元的状态只有2种。接收方可以把0V认为是二进制的0，把3.3V认为是二进制1。即：传输1个码元时，能用来表示1位数据。此时波特率的大小与比特率一致。因为很多常见的通讯中一个码元都是表示两种状态，人们常常直接以波特率来表示比特率。</p><p>如果电线上电平有0V、 3.3V、 5V、 12V四种选择，传输的信号是这4种电平之一，码元的状态有4种。接收方可以把这4个电平认为是二级制的4个值： 00、 01、 10、 11。即：传输1个码元时，能用来表示2位数据，即两个二进制比特位。因此码元状态为4时，波特率的大小是比特率的一半，码元状态越多，每次传输的码元能携带的信息越多，自然速率也越高。</p>',51)),t("p",null,[a[2]||(a[2]=o("码元有N个状态时，比特率与波特率的关系式 ：",-1)),t("mjx-container",_,[(s(),e("svg",b,[...a[0]||(a[0]=[d('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(792,-150) scale(0.707)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(1423.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(2478.9,0)"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(792,-150) scale(0.707)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(4079.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4802,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(5100,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(5585,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(6498.6,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z" style="stroke-width:3;"></path></g></g></g>',1)])])),a[1]||(a[1]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("msub",null,[t("mi",null,"R"),t("mi",null,"b")]),t("mo",null,"="),t("msub",null,[t("mi",null,"R"),t("mi",null,"B")]),t("mo",null,"∗"),t("mi",null,"l"),t("mi",null,"o"),t("msub",null,[t("mi",null,"g"),t("mn",null,"2")]),t("mi",null,"N")])],-1))])]),a[4]||(a[4]=d('<h2 id="五、常见的串行通信" tabindex="-1">五、常见的串行通信 <a class="header-anchor" href="#五、常见的串行通信" aria-label="Permalink to &quot;五、常见的串行通信&quot;">​</a></h2><p>在嵌入式中， 有众多通信协议， 往往从性能、成本、稳定性、 易用性等角度考虑选择合适的协议。</p><table tabindex="0"><thead><tr><th>通信接口</th><th>串行/并行</th><th>传输方向</th><th>同步/异步</th><th>电平标准</th><th>主从组成</th><th>引脚说明</th></tr></thead><tbody><tr><td>TTL</td><td>串行</td><td>全双工</td><td>异步</td><td>逻辑电平</td><td>一主一从</td><td>通过UART实现，TXD:发送端 RXD:接受端 GND:公共地</td></tr><tr><td>RS232</td><td>串行</td><td>全双工</td><td>异步</td><td>逻辑电平</td><td>一主一从</td><td>通过UART实现，TXD:发送端 RXD:接受端 GND:公共地</td></tr><tr><td>RS485</td><td>串行</td><td>半双工</td><td>异步</td><td>差分信号</td><td>一主多从</td><td>通过UART实现，TXD:发送端 RXD:接受端 GND:公共地</td></tr><tr><td>USART</td><td>串行</td><td>全双工</td><td>同步</td><td>逻辑电平</td><td>一主一从</td><td>---</td></tr><tr><td>I2C</td><td>串行</td><td>半双工</td><td>同步</td><td>逻辑电平</td><td>一主多从</td><td>SCL:同步时钟 SDA:数据输入/输出端</td></tr><tr><td>SPI</td><td>串行</td><td>全双工</td><td>同步</td><td>逻辑电平</td><td>一主多从</td><td>SCK:同步时钟 MISO:主机输入，从机输出 MOSI:主机输出，从机输入</td></tr><tr><td>CAN</td><td>串行</td><td>半双工</td><td>异步</td><td>差分信号</td><td>多主多从</td><td>---</td></tr><tr><td>1-Wire</td><td>串行</td><td>半双工</td><td>异步</td><td>逻辑电平</td><td>一主多从</td><td>单总线，DQ:发送/接受端</td></tr><tr><td>USB2.0</td><td>串行</td><td>半双工</td><td>异步</td><td>差分信号</td><td>一主多从</td><td>---</td></tr></tbody></table>',3))])}const D=Q(u,[["render",f]]);export{w as __pageData,D as default};
